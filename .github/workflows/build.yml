name: Build

on:
  push:
    tags:
      - 'v*'  # 匹配所有以 v 开头的标签，如 v1.0.0
  workflow_dispatch:  # 保留手动触发选项

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Cache OpenWrt SDK
      id: cache-sdk
      uses: actions/cache@v3
      with:
        path: |
          openwrt-sdk-*.tar.xz
          sdk
        key: ${{ runner.os }}-openwrt-sdk-${{ hashFiles('version.txt') }}

    - name: Cache build dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pip
          ~/.npm
          ~/.composer
        key: ${{ runner.os }}-deps-${{ hashFiles('**/package.json', '**/composer.json') }}

    - name: Download OpenWrt SDK
      if: steps.cache-sdk.outputs.cache-hit != 'true'
      run: |
        SDK_URL="https://downloads.openwrt.org/releases/23.05.2/targets/x86/64/openwrt-sdk-23.05.2-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz"
        curl -L -o openwrt-sdk.tar.xz "$SDK_URL"
        echo "SDK_HASH=$(sha256sum openwrt-sdk.tar.xz | cut -d' ' -f1)" >> $GITHUB_ENV

    - name: Setup SDK
      if: steps.cache-sdk.outputs.cache-hit != 'true'
      run: |
        tar xf openwrt-sdk.tar.xz
        mv openwrt-sdk-* sdk
        cd sdk
        
        # 只更新必要的 feeds
        ./scripts/feeds update luci
        ./scripts/feeds install -a -p luci
        
        # 创建必要的符号链接
        mkdir -p package/sitepi
        ln -sf $GITHUB_WORKSPACE/package/sitepi/* package/sitepi/
        mkdir -p package/luci-app-sitepi
        ln -sf $GITHUB_WORKSPACE/luci/* package/luci-app-sitepi/

    - name: Build package
      run: |
        cd sdk
        make defconfig
        make package/sitepi/compile V=s
        make package/luci-app-sitepi/compile V=s

    - name: Collect artifacts
      run: |
        mkdir -p artifacts
        find sdk/bin/packages -name "*.ipk" -exec cp {} artifacts/ \;
        find sdk/bin/packages -name "*.buildinfo" -exec cp {} artifacts/ \;

    - name: Calculate SHA256
      id: sha
      run: |
        cd artifacts
        for file in *.ipk; do
          echo "sha_${file%.*}=$(sha256sum $file | cut -d' ' -f1)" >> $GITHUB_OUTPUT
        done

    - name: Upload to GitHub Assets
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: artifacts/*
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        body: |
          ## SitePi SDWAN Release ${{ github.ref_name }}
          
          ### Installation
          Download and install the following packages:
          - sitepi_${{ github.ref_name }}_all.ipk
          - luci-app-sitepi_${{ github.ref_name }}_all.ipk
          
          ```bash
          opkg install sitepi_${{ github.ref_name }}_all.ipk
          opkg install luci-app-sitepi_${{ github.ref_name }}_all.ipk
          ```
          
          ### SHA256 Checksums
          ```
          ${{ steps.sha.outputs.* }}
          ```
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: packages
        path: artifacts/
        retention-days: 7